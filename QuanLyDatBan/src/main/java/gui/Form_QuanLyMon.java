/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import dao.MonAn_DAO;
import entity.LoaiMon;
import entity.MonAn;
import java.awt.Image;
import java.io.File;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class Form_QuanLyMon extends javax.swing.JPanel {

    /**
     * Creates new form Form_ThemMon
     */
    public Form_QuanLyMon() {
        initComponents();
        loadDulieu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        P_ThemMon = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jlabel_anhMonAn = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        t_tenMon = new javax.swing.JTextField();
        combo_trangThai = new javax.swing.JComboBox<>();
        combo_loaiMon = new javax.swing.JComboBox<>();
        t_giaTien = new javax.swing.JTextField();
        t_thongtin = new javax.swing.JTextArea();
        xacnhan_huy = new javax.swing.JPanel();
        P_button = new javax.swing.JPanel();
        them = new javax.swing.JButton();
        xoa = new javax.swing.JButton();
        sua = new javax.swing.JButton();
        tim = new javax.swing.JButton();
        load = new javax.swing.JButton();
        Scroll_table_Mon = new javax.swing.JScrollPane();
        table_monAn = new javax.swing.JTable();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Tên món ăn");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Trạng thái món");

        jLabel3.setText("Loại món");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Giá tiền");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Thông tin món");

        jlabel_anhMonAn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jlabel_anhMonAn.setText("Chưa có ảnh");
        jlabel_anhMonAn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jlabel_anhMonAn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jlabel_anhMonAn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jButton4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton4.setText("Thêm ảnh");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        t_tenMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_tenMonActionPerformed(evt);
            }
        });

        combo_trangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Có sẵn", "Không có sẵn" }));

        combo_loaiMon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đồ uống", "Món khô", "Món nước" }));

        t_giaTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_giaTienActionPerformed(evt);
            }
        });

        t_thongtin.setColumns(20);
        t_thongtin.setRows(5);

        xacnhan_huy.setBackground(new java.awt.Color(204, 255, 255));

        javax.swing.GroupLayout xacnhan_huyLayout = new javax.swing.GroupLayout(xacnhan_huy);
        xacnhan_huy.setLayout(xacnhan_huyLayout);
        xacnhan_huyLayout.setHorizontalGroup(
            xacnhan_huyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        xacnhan_huyLayout.setVerticalGroup(
            xacnhan_huyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        P_button.setBackground(new java.awt.Color(255, 255, 255));

        them.setBackground(new java.awt.Color(204, 255, 204));
        them.setText("Thêm");
        them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themActionPerformed(evt);
            }
        });

        xoa.setBackground(new java.awt.Color(255, 204, 204));
        xoa.setText("Xóa");
        xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaActionPerformed(evt);
            }
        });

        sua.setBackground(new java.awt.Color(255, 204, 255));
        sua.setText("Sửa");
        sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suaActionPerformed(evt);
            }
        });

        tim.setText("Tìm");
        tim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timActionPerformed(evt);
            }
        });

        load.setBackground(new java.awt.Color(0, 153, 153));
        load.setForeground(new java.awt.Color(255, 255, 204));
        load.setText("UpdateTable");
        load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout P_buttonLayout = new javax.swing.GroupLayout(P_button);
        P_button.setLayout(P_buttonLayout);
        P_buttonLayout.setHorizontalGroup(
            P_buttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(P_buttonLayout.createSequentialGroup()
                .addGroup(P_buttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(P_buttonLayout.createSequentialGroup()
                        .addGroup(P_buttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(xoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(load, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, P_buttonLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(them, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        P_buttonLayout.setVerticalGroup(
            P_buttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(P_buttonLayout.createSequentialGroup()
                .addComponent(them, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(xoa, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(sua, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(tim, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(load, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout P_ThemMonLayout = new javax.swing.GroupLayout(P_ThemMon);
        P_ThemMon.setLayout(P_ThemMonLayout);
        P_ThemMonLayout.setHorizontalGroup(
            P_ThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(P_ThemMonLayout.createSequentialGroup()
                .addContainerGap(124, Short.MAX_VALUE)
                .addGroup(P_ThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(P_ThemMonLayout.createSequentialGroup()
                        .addGap(0, 42, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(t_thongtin, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(P_ThemMonLayout.createSequentialGroup()
                        .addGroup(P_ThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlabel_anhMonAn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(P_ThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(P_ThemMonLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(combo_trangThai, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(P_ThemMonLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_tenMon, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(P_ThemMonLayout.createSequentialGroup()
                                .addGroup(P_ThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(P_ThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(combo_loaiMon, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(P_ThemMonLayout.createSequentialGroup()
                                        .addComponent(t_giaTien, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(P_ThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(P_button, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xacnhan_huy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        P_ThemMonLayout.setVerticalGroup(
            P_ThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(P_ThemMonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(P_ThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(P_ThemMonLayout.createSequentialGroup()
                        .addGroup(P_ThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(P_ThemMonLayout.createSequentialGroup()
                                .addComponent(jlabel_anhMonAn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(jButton4))
                            .addGroup(P_ThemMonLayout.createSequentialGroup()
                                .addGroup(P_ThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(t_tenMon)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(P_ThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(combo_trangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(P_ThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(combo_loaiMon, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(P_ThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(t_giaTien, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(P_ThemMonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_thongtin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(P_ThemMonLayout.createSequentialGroup()
                        .addComponent(P_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(xacnhan_huy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Scroll_table_Mon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        table_monAn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã món ăn", "Tên món ăn", "Giá tiền", "Trạng thái", "Mô tả", "Loại món"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Scroll_table_Mon.setViewportView(table_monAn);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Scroll_table_Mon)
            .addComponent(P_ThemMon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(P_ThemMon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Scroll_table_Mon, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void loadLoaiMonToComboBox() {
        MonAn_DAO maDAO = new MonAn_DAO();
        List<LoaiMon> listLoaiMon = maDAO.getAllLoaiMon(); // Phương thức để lấy danh sách loại món
        combo_loaiMon.removeAllItems(); // Xóa các mục cũ

        for (LoaiMon loai : listLoaiMon) {
            combo_loaiMon.addItem(loai.getTenLoai()); // Thêm từng loại món vào combobox
        }
    }
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
                
                // Chỉ lọc các tập tin ảnh (jpg, png, gif)
                FileNameExtensionFilter filter = new FileNameExtensionFilter("Image Files", "jpg", "png", "gif");
                fileChooser.setFileFilter(filter);
                
                int option = fileChooser.showOpenDialog(Form_QuanLyMon.this);
                if (option == JFileChooser.APPROVE_OPTION) {
                    File file = fileChooser.getSelectedFile();
                    ImageIcon imageIcon = new ImageIcon(file.getAbsolutePath());
                    
                    // Resize ảnh cho phù hợp với JLabel
                    Image img = imageIcon.getImage().getScaledInstance(jlabel_anhMonAn.getWidth(), jlabel_anhMonAn.getHeight(), Image.SCALE_SMOOTH);
                    jlabel_anhMonAn.setIcon(new ImageIcon(img));
                    jlabel_anhMonAn.setText(null); // Xóa text "Chưa có ảnh"
                }
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private String generateNewMaMonAn(MonAn_DAO maDAO) {
        String lastMaMonAn = maDAO.getLastMaMonAn(); // Lấy mã lớn nhất từ cơ sở dữ liệu
        int nextNumber = 1; // Mặc định bắt đầu từ 1

        if (lastMaMonAn != null) {
            // Lấy phần số từ mã cuối cùng
            nextNumber = Integer.parseInt(lastMaMonAn.substring(1).trim()) + 1;
        }

        // Sinh mã mới theo định dạng "M" + số với 3 chữ số
        String newMaMonAn;
        do {
            newMaMonAn = String.format("M%03d", nextNumber);
            nextNumber++; // Tăng lên 1 để kiểm tra mã tiếp theo
        } while (maDAO.checkMaMonAnExists(newMaMonAn)); // Kiểm tra mã này có tồn tại hay không

        return newMaMonAn;
    }

    
    private void themActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themActionPerformed
        MonAn_DAO maDAO = new MonAn_DAO();
        String newMaMonAn = generateNewMaMonAn(maDAO);
        String tenMonAn = t_tenMon.getText().trim();
        String thongTinMon = t_thongtin.getText().trim();
        String trangThaiMonAn = (String) combo_trangThai.getSelectedItem();
        String tenLoai = (String) combo_loaiMon.getSelectedItem(); // Lấy mã loại
        double giaTien;
        String maLoai;
        if(tenLoai.equalsIgnoreCase("Đồ uống"))
            maLoai = "LM001";
        else if(tenLoai.equalsIgnoreCase("Món khô"))
            maLoai = "LM002";
        else
            maLoai = "LM003";
        
        LoaiMon selectedLoaiMon = new LoaiMon(maLoai, tenLoai);
        
        try {
            giaTien = Double.parseDouble(t_giaTien.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Giá tiền không hợp lệ.");
            return;
        }

        // Kiểm tra đầu vào
        if (tenMonAn.isEmpty() || thongTinMon.isEmpty() || trangThaiMonAn.isEmpty() || maLoai == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin.");
            return;
        }

        // Tạo đối tượng MonAn mới
        MonAn monAn = new MonAn(newMaMonAn, tenMonAn, thongTinMon, trangThaiMonAn, giaTien, selectedLoaiMon); // Đối tượng LoaiMon

        // Thêm món ăn vào cơ sở dữ liệu
        if (maDAO.insertMonAn(monAn)) {
            JOptionPane.showMessageDialog(this, "Thêm món ăn thành công.");
            DefaultTableModel model = (DefaultTableModel) table_monAn.getModel();
            model.addRow(new Object[]{newMaMonAn, tenMonAn, giaTien, thongTinMon, trangThaiMonAn, tenLoai}); // Thêm mã loại vào bảng

            // Xóa nội dung nhập sau khi thêm thành công
            t_tenMon.setText("");
            t_thongtin.setText("");
            t_giaTien.setText("");
            combo_trangThai.setSelectedIndex(0);
            combo_loaiMon.setSelectedIndex(-1); // Reset loại món
            jlabel_anhMonAn.setIcon(null);
            jlabel_anhMonAn.setText("Chưa có ảnh");
        } else {
            JOptionPane.showMessageDialog(this, "Thêm món ăn thất bại.");
        }
    }//GEN-LAST:event_themActionPerformed

    private void xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaActionPerformed
        // TODO add your handling code here:
        // Lấy hàng được chọn trong bảng
        int selectedRow = table_monAn.getSelectedRow();

        // Kiểm tra nếu có hàng nào được chọn
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một món ăn để xóa.");
            return;
        }

        // Lấy mã món ăn từ hàng được chọn (cột đầu tiên)
        String maMonAn = table_monAn.getValueAt(selectedRow, 0).toString();

        // Tạo một đối tượng của MonAn_DAO để thực hiện xóa
        MonAn_DAO maDAO = new MonAn_DAO();

        // Xác nhận trước khi xóa
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa món ăn này?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            // Gọi phương thức deleteMonAn để xóa món ăn
            boolean isDeleted = maDAO.deleteMonAn(maMonAn);

            if (isDeleted) {
                // Xóa hàng khỏi JTable sau khi xóa thành công trong CSDL
                DefaultTableModel model = (DefaultTableModel) table_monAn.getModel();
                model.removeRow(selectedRow);

                JOptionPane.showMessageDialog(this, "Xóa món ăn thành công.");
            } else {
                JOptionPane.showMessageDialog(this, "Xóa món ăn thất bại.");
            }
        }
    }//GEN-LAST:event_xoaActionPerformed

    private void loadDulieu(){
        // TODO add your handling code here:
        // Tạo một đối tượng của MonAn_DAO
        MonAn_DAO maDAO = new MonAn_DAO();

        // Lấy danh sách món ăn từ hàm getAllMonAn()
        List<MonAn> listMonAn = maDAO.getAllMonAn();

        // Tạo DefaultTableModel để đưa dữ liệu vào bảng
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Mã Món Ăn");
        model.addColumn("Tên Món Ăn");
        model.addColumn("Giá Tiền");
        model.addColumn("Thông Tin Món");
        model.addColumn("Trạng Thái");
        model.addColumn("Loại Món"); 

        // Duyệt qua danh sách các món ăn và thêm từng bản ghi vào model
        for (MonAn monAn : listMonAn) {
            model.addRow(new Object[]{
                monAn.getMaMonAn(),
                monAn.getTenMonAn(),
                monAn.getGiaTien(),
                monAn.getThongTinMon(),
                monAn.getTrangThaiMon(),
                monAn.getLoai_mon().getTenLoai()
            });
        }

        // Đưa model vào table_monAn để hiển thị dữ liệu
        table_monAn.setModel(model);
        t_tenMon.setText("");
            t_thongtin.setText("");
            t_giaTien.setText("");
            combo_trangThai.setSelectedIndex(0);
            jlabel_anhMonAn.setIcon(null);
            jlabel_anhMonAn.setText("Chưa có ảnh");
    }
    
    private void loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadActionPerformed
        loadDulieu();
    }//GEN-LAST:event_loadActionPerformed

    private void t_tenMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_tenMonActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_t_tenMonActionPerformed

    private void timActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timActionPerformed
        String keyword = JOptionPane.showInputDialog(this, "Nhập Mã Món hoặc Tên Món để tìm kiếm:");
        if (keyword != null && !keyword.isEmpty()) {
            MonAn_DAO maDAO = new MonAn_DAO();
            List<MonAn> foundMonAnList = maDAO.searchMonAn(keyword);

            DefaultTableModel model = (DefaultTableModel) table_monAn.getModel();
            model.setRowCount(0); // Xóa các dòng hiện tại trong bảng

            for (MonAn monAn : foundMonAnList) {
                model.addRow(new Object[]{monAn.getMaMonAn(), monAn.getTenMonAn(), monAn.getGiaTien(), monAn.getThongTinMon(), monAn.getTrangThaiMon(), monAn.getLoai_mon().getTenLoai()});
            }

            if (foundMonAnList.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy món ăn với mã hoặc tên: " + keyword);
            }
        }
    }//GEN-LAST:event_timActionPerformed

    private void suaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suaActionPerformed
        int selectedRow = table_monAn.getSelectedRow();

        if (selectedRow != -1) { // Kiểm tra có món ăn nào được chọn không
            String maMonAn = (String) table_monAn.getValueAt(selectedRow, 0);
            MonAn_DAO maDAO = new MonAn_DAO();
            MonAn monAn = maDAO.findMonAnByMaMonAn(maMonAn);

            // Hiển thị thông tin lên các trường nhập liệu
            if (monAn != null) {
                t_tenMon.setText(monAn.getTenMonAn());
                t_thongtin.setText(monAn.getThongTinMon());
                t_giaTien.setText(String.valueOf(monAn.getGiaTien()));
                combo_trangThai.setSelectedItem(monAn.getTrangThaiMon());

                // err 
                
//                String maLoaiMonAn = monAn.getLoai_mon().getMaLoai();
//                for (int i = 0; i < combo_loaiMon.getItemCount(); i++) {
//                    LoaiMon loaiMon = (LoaiMon) combo_loaiMon.getItemAt(i);
//                    if (loaiMon.getMaLoai().equals(maLoaiMonAn)) {
//                        combo_loaiMon.setSelectedItem(loaiMon);
//                        break;
//                    }
//                }

                // Tạo và hiển thị nút Xác nhận và Hủy
                JButton btnXacNhan = new JButton("Xác nhận");
                JButton btnHuy = new JButton("Hủy");

                btnXacNhan.addActionListener(e -> {
                    // Cập nhật món ăn
                    String tenMonAn = t_tenMon.getText().trim();
                    String thongTinMon = t_thongtin.getText().trim();
                    String trangThaiMonAn = (String) combo_trangThai.getSelectedItem();
                    LoaiMon selectedLoaiMon = (LoaiMon) combo_loaiMon.getSelectedItem(); // Lấy loại món đã chọn
                    String maLoai = selectedLoaiMon != null ? selectedLoaiMon.getMaLoai() : null; // Lấy mã loại
                    double giaTien;

                    try {
                        giaTien = Double.parseDouble(t_giaTien.getText().trim());
                    } catch (NumberFormatException e1) {
                        JOptionPane.showMessageDialog(this, "Giá tiền không hợp lệ.");
                        return;
                    }

                    // Kiểm tra đầu vào
                    if (tenMonAn.isEmpty() || thongTinMon.isEmpty() || trangThaiMonAn.isEmpty() || maLoai == null) {
                        JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin.");
                        return;
                    }

                    // Tạo đối tượng MonAn mới
                    MonAn updatedMonAn = new MonAn(maMonAn, tenMonAn, thongTinMon, trangThaiMonAn, giaTien, selectedLoaiMon); // Cập nhật loại món

                    // Cập nhật món ăn vào cơ sở dữ liệu
                    if (maDAO.updateMonAn(updatedMonAn)) {
                        JOptionPane.showMessageDialog(this, "Cập nhật món ăn thành công.");

                        // Cập nhật lại bảng sau khi sửa
                        table_monAn.setValueAt(tenMonAn, selectedRow, 1);
                        table_monAn.setValueAt(giaTien, selectedRow, 2);
                        table_monAn.setValueAt(thongTinMon, selectedRow, 3);
                        table_monAn.setValueAt(trangThaiMonAn, selectedRow, 4);
                        table_monAn.setValueAt(maLoai, selectedRow, 5); // Cập nhật mã loại nếu có cột mã loại
                    } else {
                        JOptionPane.showMessageDialog(this, "Cập nhật món ăn thất bại.");
                    }

                    // Ẩn nút Xác nhận và Hủy
                    xacnhan_huy.remove(btnXacNhan);
                    xacnhan_huy.remove(btnHuy);
                    xacnhan_huy.revalidate();
                    xacnhan_huy.repaint();
                });

                btnHuy.addActionListener(e -> {
                    // Ẩn nút Xác nhận và Hủy
                    xacnhan_huy.remove(btnXacNhan);
                    xacnhan_huy.remove(btnHuy);
                    xacnhan_huy.revalidate();
                    xacnhan_huy.repaint();
                });

                // Xóa các nút cũ (nếu có) trước khi thêm mới
                xacnhan_huy.removeAll(); 
                xacnhan_huy.add(btnXacNhan);
                xacnhan_huy.add(btnHuy);
                xacnhan_huy.revalidate(); // Cập nhật lại giao diện
                xacnhan_huy.repaint();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn món ăn để sửa.");
        }
    }//GEN-LAST:event_suaActionPerformed

    private void t_giaTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_giaTienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t_giaTienActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form_QuanLyMon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form_QuanLyMon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form_QuanLyMon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form_QuanLyMon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form_QuanLyMon().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel P_ThemMon;
    private javax.swing.JPanel P_button;
    private javax.swing.JScrollPane Scroll_table_Mon;
    private javax.swing.JComboBox<String> combo_loaiMon;
    private javax.swing.JComboBox<String> combo_trangThai;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jlabel_anhMonAn;
    private javax.swing.JButton load;
    private javax.swing.JButton sua;
    private javax.swing.JTextField t_giaTien;
    private javax.swing.JTextField t_tenMon;
    private javax.swing.JTextArea t_thongtin;
    private javax.swing.JTable table_monAn;
    private javax.swing.JButton them;
    private javax.swing.JButton tim;
    private javax.swing.JPanel xacnhan_huy;
    private javax.swing.JButton xoa;
    // End of variables declaration//GEN-END:variables

    private void elseif() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
